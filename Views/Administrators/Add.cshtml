@model StudentFinanceSupport.Models.Administrator
@using StudentFinanceSupport.Helpers


@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Main_Layout_.cshtml";
}

<h2>Add</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Administrator</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" , @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger" })
            </div>
        </div>
      
        <div class="form-group">
            
            <div class="col-md-10">
                @Html.LabelFor(model => model.Roles, "Additional Roles", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.ListBox(
                "Roles", 
                 ViewBag.admin_roles as MultiSelectList,
                 new { @class = "form-control", data_placeholder = "Choose a Role..." }
                    )
                    @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
                </div>
                </div>
        </div>

        <!-- Start of password entries -->
        <div class="form-group">
            <div class="col-md-10">

                <label class="control-label col-md-4" for="send_setup">Email user to set password ?</label>
                <input id="send_setup" type="checkbox" value="false" name="send_setup" />
            </div>
        </div>
        <div id="password_wrapper" class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <div id="password_messages"></div>


        </div>
        <div class="form-group">
            <span class="control-label col-md-2">Retype Password</span>
            <div class="col-md-10">

                @Html.Password("password_match", (string)ViewBag.password_match, new { @class = "form-control", @value = ViewBag.password_match })

            </div>
        </div>
        <!-- End of password entries -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/pwstrength")
<script>
    $(function () {
        "use strict";
        var options = {};
        options.common = {
            onLoad: function () {
                //$('#password_messages').text('Start typing password');
            }
        };
        options.ui = {
            bootstrap2: false,
            showErrors: true
        };
        $('#Password').pwstrength(options);
    })
</script>

