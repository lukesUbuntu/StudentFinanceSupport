@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Main_Layout_.cshtml";
}

@Scripts.Render("~/bundles/morris")
@Styles.Render("~/Content/datatables")
@Scripts.Render("~/bundles/datatables")

@Html.Partial("~/Views/Reports/ReportFilter.cshtml")

<div id="main_area" class="panel panel-default col-sm-12">
     <!-- Errors to be displyed-->
    <div id="filter_errors" class="alert alert-danger pull-left col-sm-12" style="display:none"></div>
    <!-- /.panel-heading -->
    <div class="panel-body">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs ">
            <li class="active">
                <a href="#graph_stats" data-toggle="tab">Graph StaticsView</a>
            </li>
            <li>
                <a href="#student_report" data-toggle="tab">Student Report</a>
            </li>

        </ul>

        <!-- Tab panes -->
        <div class="tab-content">
            <div class="tab-pane fade in active" id="graph_stats">

                <!--<div id="graph_view">  <h4>Graph View</h4>-->
                <div class="">

                    <div class="">
                        
                        <div class="other-stats" style="z-index: 100;">
                            <h3>Report Type : <span id="report_type"></span></h3>
                            <div class="list-group">
                                <div class="list-group-item">
                                    <i class="fa fa-group fa-fw"></i> Students With Grants
                                    <div class="pull-right text-muted small">
                                        <div id="student_count"></div>
                                    </div>
                                </div>

                                <div class="list-group-item">
                                    <i class="fa fa-comment fa-fw"></i> Students With Advice
                                    <div class="pull-right text-muted small">
                                        <div id="advice_count"></div>
                                    </div>
                                </div>
                                <div class="list-group-item">
                                    <i class="fa fa-dollar fa-fw"></i> Total Grant Cost
                                    <div class="pull-right text-muted small">
                                        <div>$<span id="total_cost"></span></div>
                                    </div>
                                </div>
                                <div class="list-group-item">
                                    <i class="fa fa-gift fa-fw"></i> Total Koha Cost
                                    <div class="pull-right text-muted small">
                                        <div>$<span id="total_koha"></span></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                     
                    </div>

                </div>
                <div class="row">
                    <div class="">
                        <div class="panel panel-default ">
                            <div class="panel-heading ">
                                <i class="fa fa-bar-chart-o fa-fw"></i> Graph Overview
                                <div class="pull-right">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown">
                                            Other Graphs
                                            <span class="caret"></span>
                                        </button>
                                        <ul class="dropdown-menu pull-right" role="menu">
                                            <li>
                                                <a id="bar_graph_switch" href="#">Bar Graph</a>
                                            </li>
                                            <li>
                                                <a id="area_graph_switch" href="#">Area Graph</a>
                                            </li>

                                            <li class="divider"></li>
                                            <li>
                                                <a id="reload_graph_over" href="#">Reload</a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <!-- /.panel-heading -->
                            <div class="panel-body">
                                <div id="main-report" class=""></div>
                            </div>

                            <!-- /.panel-body -->
                        </div>
                    </div>


                </div>
                <!--</div>-->

                <div id="pie_charts">
                
                        
                        <div id="grant_pie_report" class="pull-left" style="width: 300px; height:300px"></div>
                    
                   
                       <div id="faculty_pie_report" class="pull-right" style="width: 300px; height:300px ">  </div>
                
                    
                 
                      <div id="campus_pie_report" class="pull-left" style="width: 300px; height:300px;top:20px; "></div>
               
                    
                </div>

            </div>
            <div class="tab-pane fade" id="student_report">
                <h4>Record Views</h4>
                @Html.Partial("~/Views/Reports/ViewReport.cshtml");
            </div>
            
          
        </div>
        
    </div>
</div>

<script>
    //ourglobals at the top
    var graph_data = [];
    var grant_pie_report = [];
    var pie_chart_faculty = [];
    var student_report_view = [];
    var $error_message = $("#filter_errors");
    var $search_report_form = $("#filter_wizard");

    var keys = []
    //for our pie graph reports
    var pie_reports = [];

    function getMainOveriew(event) {
        
        $.ajax({
            url: "/Reports/getFilterReports",
            type: "GET",
            dataType: "json",
            success: processDataReports
        });
    }


  
    function mainReport(data) {
        
        var report_data = [];
        var index = 0;

        $.map(data, function (reportData) {
            //console.log("reportData", reportData.GrantType)
            //fix the date conversion by just parsing the date time
            var thedate = new Date(parseInt(reportData.DateOfIssue.substr(6)));
            //2012-02-24
            thedate = thedate.getFullYear() + "-" + (thedate.getMonth() + 1) + "-" + thedate.getDate();

            var data = {
                'date': thedate,
                'index': index++
            }

            //add the key as a type name to data object
            if (keys.indexOf(reportData.GrantType, keys) == -1)
                keys.push(reportData.GrantType)

          

               

            data[reportData.GrantType] = reportData.GrantValue;
            report_data.push(data)
            
        })

        //store graph data for switching from bar graph
        graph_data = report_data;
        areaGraphOverview();


    }



    function barGraphOverview() {
        
        console.log("running barGraphOverview");
        $("#main-report").empty();

        if (graph_data.length < 1) {
            $("#main-report").text("not enought data to show graph")
            return;
        }
            
        console.log("graph_data", graph_data)
        Morris.Bar({
            element: 'main-report',
            data: graph_data,
            xkey: 'date',
            xLabels: 'day',
            parseTime: false,
            smooth: false,
            ykeys: keys,
            //['Hardship', 'Food', 'TrainTickets'],
            labels: keys,
            //['Hardship', 'Food Vouchers', 'Train Tickets'],
            ymax: 'auto',
            pointSize: 2,
            hideHover: 'auto',
            resize: true,
            /*
            lineColors: [
           '#FFE600',
           '#223EB2',
           '#FF8000',
           '#95D7BB'
            ],*/
            pointFillColors: ['#00ff00']
        });
    }
    function areaGraphOverview(event) {
        //cammel case words regex
        //event.preventDefault();

        var rex = /([A-Z])([A-Z])([a-z])|([a-z])([A-Z])/g;

        var ykeys = [];
        var labels = [];
        /*
        $.map(graph_data,function(index,value){
            //ykeys.push(key)
            //var label = key.replace(rex, "$1$4 $2$3$5");
            //labels.push(label);
            console.log("index", index)
           

        });*/
        //console.log("keys", keys)
        
        
        //report_data
        $("#main-report").empty();

        if (graph_data.length < 1) {
            $("#main-report").text("not enought data to show graph")
            return;
        }
        Morris.Area({
            element: 'main-report',
            data: graph_data,
            xkey: 'date',
            xLabels: 'day',
            parseTime: false,
            smooth: false,
            ykeys: keys,
            //['Hardship', 'Food', 'TrainTickets'],
            labels: keys,
            //['Hardship', 'Food Vouchers', 'Train Tickets'],
            ymax: 'auto',
            pointSize: 2,
            hideHover: 'auto',
            resize: true,
            /*
            lineColors: [
           '#FFE600',
           '#223EB2',
           '#FF8000',
           '#95D7BB'
            ],*/
            pointFillColors: ['#00ff00']
        });
    }
    //switch graphs binding click event

    $("#bar_graph_switch").click(function (e) {
        e.preventDefault();
        barGraphOverview()
    });
    $("#area_graph_switch").click(function (e) {
        e.preventDefault();
        areaGraphOverview();
    });
    $("#reload_graph_over").click(function (e) {
        e.preventDefault();
        getMainOveriew()
    });
    //bind our reset
    
    $("#search_report_reset_btn").click(function (e) {

        //reset all input box to selected
        var select_options = $("#search_report_form option:selected");
        var text_box = $("#search_report_form :input:text");
        $.each(select_options, function () {
            //$(this).prop('selectedIndex', 0);
            $(this).removeAttr("selected");

        })
        $.each(text_box, function () {
            $(this).val('')
        })
        $error_message.alertBox("Filters Reset", true)
        setTimeout(function () {
            $error_message.alertBox()
        }, 1500)
    });
    /*
    $("#pie_grant_chart").click(pieChartValue);
    $("#pie_faculty_chart").click(pieChartValue);*/
    getMainOveriew();
  

    //code from our report filter
    $("#search_report_btn").click(function () {
        $("#start_date").val($.trim($("#start_date").val()));
        var report_details = $(":input", $search_report_form).serialize();
       
        $("#main_area").isLoading({
            text: "Loading Reports",
            position: "overlay"
        });
        console.log("report_details", report_details)
        $.ajax({
            url: "/Reports/getFilterReports",
            type: "POST",
            dataType: "json",
            data: report_details,
            //data: recovery,
            success: function (response) {
                var errors = [];
               
                //error_message.empty();
                $error_message.alertBox();
                //go through out error list if any
                $.each(response.error_list, function (index, field) {

                    if (field.Value.length > 0)
                    {
                        //error_message.append("<b>" + field.Key.replace("_", " ") + "</b> " + field.Value)
                        errors.push("<b>" + field.Key.replace("_", " ") + "</b> " + field.Value)
                        console.log("error", field)
                       
                        //take the key and apply issue
                    }
                    
                    
                })
                if (errors.length > 0) {
                    $error_message.alertBox(errors.join("<p>",false))
                }
                processDataReports(response)
            }
        });
    })

    function updateReportTable() {
        console.log("student_report_view", student_report_view)
        $('#voucher-report-table').DataTable({
            responsive: true,
            "data": student_report_view,
            "bDestroy": true,

            "aoColumnDefs": [
            {
                "aTargets": [5],
                "mData": null,
                "mRender": function (data, type, full) {
                   
                    return '<a class="btn btn-default " href="/StudentVouchers/Edit/' + full[5] + '">Edit Grant</a>';


                }
            }
            ]
        });

    }

    function returnDate(theDate) {
        var parsedDate = new Date(parseInt(theDate.substr(6)));
        var jsDate = new Date(parsedDate); //Date object
        //var jsDate = new Date();
        var dd = jsDate.getDate();
        var mm = jsDate.getMonth() + 1; //January is 0!

        var yyyy = jsDate.getFullYear();
        if (dd < 10) {
            dd = '0' + dd
        }
        if (mm < 10) {
            mm = '0' + mm
        }
        return formated_date = dd + '/' + mm + '/' + yyyy;
    }

    function updatePieCharts() {
       
        if (pie_reports["grant_pie_report"].length < 1)
            $("#grant_pie_report").text("Not enought grants to show pie chart")
        else
            $("#grant_pie_report").empty();


        if (pie_reports["faculty_pie_report"].length < 1)
            $("#faculty_pie_report").text("Not enought faculty to show pie chart")
        else
            $("#faculty_pie_report").empty();

        console.log("grant_pie_report", pie_reports["grant_pie_report"])
        console.log("faculty_pie_report", pie_reports["faculty_pie_report"])

        if (pie_reports["grant_pie_report"].length > 0)
        $.plot($("#grant_pie_report"), pie_reports["grant_pie_report"], {
            series: {
                pie: {
                    show: true
                }
            },
            grid: {
                hoverable: true
            },
            tooltip: true,
            tooltipOpts: {
                content: "%p.0%, %s", // show percentages, rounding to 2 decimal places
                shifts: {
                    x: 20,
                    y: 0
                },
                defaultTheme: false
            }
        });
        var xaxisLabel = $("<div class='axisLabel xaxisLabel'></div>")
            .text("Grant Types")
            .appendTo($('#grant_pie_report'));

        if (pie_reports["faculty_pie_report"].length > 0)
        $.plot($("#faculty_pie_report"), pie_reports["faculty_pie_report"], {
            series: {
                pie: {
                    show: true
                }
            },
            grid: {
                hoverable: true
            },
            tooltip: true,
            tooltipOpts: {
                content: "%p.0%, %s", // show percentages, rounding to 2 decimal places
                shifts: {
                    x: 20,
                    y: 0
                },
                defaultTheme: false
            }
        });
        var xaxisLabel = $("<div class='axisLabel xaxisLabel'></div>")
            .text("Faculty")
            .appendTo($('#faculty_pie_report'));


        if (pie_reports["campus_pie_report"].length > 0)
            $.plot($("#campus_pie_report"), pie_reports["campus_pie_report"], {
                series: {
                    pie: {
                        show: true
                    }
                },
                grid: {
                    hoverable: true
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%p.0%, %s", // show percentages, rounding to 2 decimal places
                    shifts: {
                        x: 20,
                        y: 0
                    },
                    defaultTheme: false
                }
            });
        var xaxisLabel = $("<div class='axisLabel xaxisLabel'></div>")
            .text("Campus")
            .appendTo($('#campus_pie_report'));
        
    }


    function processDataReports(data) {
        $("#report_type").text(data.report_type)
        //clear student student_report_view
        student_report_view = [];
        if (typeof data.student_count == "number") 
            $("#student_count").text(data.student_count)
        else
            $("#student_count").text("0")

        if (typeof data.advice_count == "number") 
            $("#advice_count").text(data.advice_count)
        else
            $("#advice_count").text("0")

        if (typeof data.total_cost == "number") 
            $("#total_cost").text(data.total_cost)
        else
            $("#total_cost").text("0")

        if (typeof data.total_koha == "number") 
            $("#total_koha").text(data.total_koha);
        else
            $("#total_koha").text("0")

        if (data.success == true) {

            //check main report data
            if (typeof data.main_report != "undefined" && data.main_report != null)
                mainReport(data.main_report);

            if (typeof data.grant_pie_report != "undefined" && data.grant_pie_report != null) {
                pie_reports["grant_pie_report"] = data.grant_pie_report;
                //processPieChart("grant_pie_report");

            }

            if (typeof data.faculty_pie_report != "undefined" && data.faculty_pie_report != null) {
                pie_reports["faculty_pie_report"] = data.faculty_pie_report;
            }

            if (typeof data.campus_pie_report != "undefined" && data.campus_pie_report != null) {
                pie_reports["campus_pie_report"] = data.campus_pie_report;
            }

            if (typeof data.student_grants != "undefined" && data.student_grants != null) {
                $.each(data.student_grants, function (index, grant) {
                    var new_col = []
                   
                    new_col.push(returnDate(grant.DateOfIssue));
                    new_col.push((typeof grant.LastName == "string") ? grant.FirstName + " " + grant.LastName : grant.FirstName)
                    new_col.push(grant.campus_name);
                    new_col.push(grant.Grant_Name);
                   
                    new_col.push("$"+grant.GrantValue);
                    //var KohaFund = (grant.KohaFund > 0) ? grant.KohaFund : 0;
                    //new_col.push((grant.KohaFund > 0) ? grant.KohaFund : 0)
                    new_col.push(grant.Grant_ID);
                    student_report_view.push(new_col);
                    //console.log("grant", grant);
                    //console.log("new_col", new_col);
                    //return false;
                })

            }
           
            updateReportTable();
            updatePieCharts();
            areaGraphOverview();
            setTimeout(function () {
                $(".isloading-overlay").remove();
            }, 250)
           

        }
    }
</script>
