@model StudentFinanceSupport.Models.StudentVoucher
@using StudentFinanceSupport.Helpers

@{
    Layout = "~/Views/Shared/_Main_Layout_.cshtml";
}

<style>
    .amount_holders {
        display: none;
    }
    .custom-search-form #student_ID{
        width : 400px;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div id="add-student-form" class="form-horizontal">
        <h4>StudentVoucher</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.student_ID, "student_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

              

                <div class="input-group custom-search-form">



                    <div class='suggest-holder'>


                        <span class="input-group-btn">
                           
                            @Html.TextBox("student_ID", (string)ViewBag.student_ID, new { @class = "form-control suggest-prompt", @placeholder = "Search Student ID, First or Last Names...", @autofocus = "", @autocomplete = "off" })
                            <button class="btn btn-default" type="button">
                                <i class="fa fa-search"></i>
                            </button>
                            
                        </span>

                        <ul></ul>
                    </div>




                </div>


                @Html.ValidationMessageFor(model => model.student_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateOfIssue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox(Html.NameFor(model => model.DateOfIssue).ToString(), @DateTime.Now.ToShortDateString(), htmlAttributes: new { @class = "datepicker" })

            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.GrantType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="grant_type_id" name="grant_type_id">
                    <option value="">-- Select One --</option>
                    @foreach (var type in (IEnumerable<StudentFinanceSupport.Models.GrantType>)@ViewBag.grant_type_id)
                    {
                        <option value="@type.grant_type_id"
                                data-grant_value="@type.grant_value "
                                data-grant_description="@type.grant_description"
                                data-grant_koha="@type.grant_koha "
                                @(Model.grant_type_id == type.grant_type_id ? "selected" : "")>
                            @type.grant_name
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.GrantType, "", new { @class = "text-danger" })
            </div>
        </div>




        <div id="grant_description_holder" style="display:none" class="form-group amount_holders">
            @Html.LabelFor(model => model.GrantDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.GrantDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GrantDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="grant_value_holder" class="form-group amount_holders">
            @Html.LabelFor(model => model.GrantValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GrantValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GrantValue, "", new { @class = "text-danger" })
            </div>
        </div>





        <div id="grant_koha_holder" class="form-group amount_holders">
            @Html.LabelFor(model => model.KuhaFunds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KuhaFunds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KuhaFunds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>


}
@Styles.Render("~/Content/Wizard")
@Scripts.Render("~/bundles/wizardSteps")
<script type="text/javascript">
    $(document).ready(function () {


        //hide all the amount holders
        $(".amount_holders").hide();



        //if grantype changed lets update other information
        $("#grant_type_id").change(selectionChange);

        //display grantvalue description if advice was selected on a reload
        $("#grant_type_id").trigger('change')
        //set our suggestion selected
        var $suggest_holder = $('.suggest-holder ul');
        //set where the textbox entry is
        //var $suggest_holder = $('.suggest-holder ul');

        $('#add-student-form').on('keyup', "input#student_ID", studentSuggestion);


        //returns the value details of the suggest box
        $('body').on('click', ".suggested-student", function (e) {
            var student_id = $(this).attr("student_id");
            console.log("student_id", student_id);
            $('#student_ID').val(student_id);
            $suggest_holder.hide();
            //$suggest_holder.empty();
        });

        function emptySearch() {
            if ($.trim($('#student_ID').val()) == "") {
                $suggest_holder.hide();
            }
            console.log("Empting search div");
            $suggest_holder.empty();
        }

        /*
         @@name  : studentSuggestion
         @@description : creates <li> based on json search results
        */
        function studentSuggestion(response) {
            //hide and empty ul
            $.ajax({
                url: "/StudentVouchers/studentSearch",
                type: "POST",
                dataType: "json",
                data: { query: $(this).val() },
                success: function (data) {
                    console.log("studentSuggestion data", data);

                    if (data.length < 1) {
                        $suggest_holder.hide();
                        //emptySearch();
                        console.log("Just hiding the div");
                        return false;
                    }
                    emptySearch();
                    $.map(data, function (student) {
                        console.log("map students ->", student)

                        //append to our ul
                        $suggest_holder.append($("<li class='suggested-student' student_id='" + student.student_id + "'>" +
                            "<span class='student-name'>" + student.student_name + "</span>" +
                            "<span class='student-id'>" + student.student_id + "</span>" +
                            "</li>")
                            );


                    })
                    $suggest_holder.show();

                }
            });
        }


        //have made changes now the select has a drop down with data types so now we show these values based data
        //data-grant_value="True " data-grant_description="True" data-grant_koha="True "
        //the actual checking is done serverside this is just to show the correct elements
        function selectionChange() {
            //grab the selected option
            var $selected = $(this).find(':selected');

            var data_objects = $($selected).data();
            console.log("data_objects", data_objects)
            //no data objects means no selection
            if (data_objects == null) return;

            //hide previous grants
            $(".amount_holders").hide();

            //loop all data elements needed
            $.each(data_objects, function (grant_type, enabled) {

                //clean up
                enabled = ($.trim(enabled).toLowerCase() == "true")

                //lets show the holders for enabled
                if (enabled == true)
                    $("#" + grant_type + "_holder").show();

            });


        }


        //date picker
        $('.datepicker').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true,
            toggleActive: true
        });

    });
</script>

